def COLOR_MAP = [
    'SUCCESS': 'good',
    'FAILURE': 'danger'
]

pipeline {
    agent any
    environment {
        SCANNER_HOME = tool 'sonarqube'
    }
    stages {
        stage('git checkout') {
            steps {
                git 'https://github.com/Sushmaa123/Java-Springboot.git'
            }
        }
        stage('compile') {
            steps {
                sh 'mvn compile'
            }
        }
        stage('code analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Java-Springboot \
                          -Dsonar.java.binaries=. \
                          -Dsonar.projectKey=Java-Springboot'''
                }
            }
        }
        stage('package') {
            steps {
                sh 'mvn install'
            }
        }
        stage('docker build') {
            steps {
                sh 'docker build -t spring-boot1 .'
            }
        }
        stage('docker run') {
            steps {
                script {
                    // Run the container in the background and expose port 8080
                    sh 'docker run -d -p 8085:8080 --name spring-boot-container spring-boot1'
                }
            }
        }
    }
    
    post {
        always {
            echo 'Sending Slack notification...'
            slackSend channel: '#ci-cd',
                      color: COLOR_MAP[currentBuild.result] ?: 'gray', // Default to 'gray' if result is null
                      message: "*${currentBuild.result}:* Job ${env.JOB_NAME} build ${env.BUILD_NUMBER} \n More info at: ${env.BUILD_URL}"
        }
    }
}

